import { z } from "zod";

// ğŸ“Œ Esquema de validaciÃ³n (Reglas de negocio)
export const CommentSchema = z.object({
  id: z.number().int().positive(),
  email: z.string().email("El email no es vÃ¡lido"),
  postId: z.number().int().positive("Falta post asociado"),
  name: z.string().min(1, "El nombre no puede estar vacÃ­o"),
  body: z.string().min(1, "El comentario no puede estar vacÃ­o"),
});

// ğŸ“Œ Tipos inferidos desde el esquema
export type Comment = z.infer<typeof CommentSchema>;

// ğŸ“Œ Interfaz del repositorio
export interface ICommentRepository {
  getCommentsForPost(postId: number): Promise<Comment[]>;
}

// ğŸ“Œ FunciÃ³n para validar un nuevo comentario
export const createComment = (comment: Omit<Comment, "id">) =>
  CommentSchema.omit({ id: true }).parse(comment);
